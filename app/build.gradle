plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '2.0.0'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: "$project.rootDir/config/jacoco.gradle"

android {

    compileSdkVersion rootProject.myCompileSdkVersion
    defaultConfig {
        applicationId "com.rosen.jambo"
        minSdkVersion rootProject.myMinSdkVersion
        targetSdkVersion rootProject.myTargetSdkVersion
        versionCode getBuildVersion() as int
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {

        release {
            storeFile file(System.getenv("KEYSTORE") ?: "keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {

        debug {
            resValue 'string', "google_maps_api_key", project.hasProperty('GOOGLE_MAPS_API_KEY') ? GOOGLE_MAPS_API_KEY : System.getenv('GOOGLE_MAPS_API_KEY')
            resValue 'string', "news_api_key", project.hasProperty('NEWS_API_KEY') ? NEWS_API_KEY : System.getenv('NEWS_API_KEY')

            debuggable true
            multiDexEnabled true

            //add tests coverage using Jacoco
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', "google_maps_api_key", project.hasProperty('GOOGLE_MAPS_API_KEY') ? GOOGLE_MAPS_API_KEY : System.getenv('GOOGLE_MAPS_API_KEY')
            resValue 'string', "news_api_key", project.hasProperty('NEWS_API_KEY') ? NEWS_API_KEY : System.getenv('NEWS_API_KEY')
            signingConfig signingConfigs.release
        }
    }


    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        animationsDisabled = false
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kapt {
        generateStubs = true
    }

}

static def getBuildVersion() {
    def version = 123
    def buildNumber = System.getenv("CIRCLE_BUILD_NUM")
    if (buildNumber != null) {
        version += buildNumber
    }
    println("VersionCode: " + version)
    return version
}

play {
    track = getDeploymentTrack()
    serviceAccountCredentials = file(System.getenv("PRIVATE_KEY") ?: "private_key.json")
    defaultToAppBundles = true
    resolutionStrategy = "ignore"
}

// The deployment track is based on the branch.
static def getDeploymentTrack() {
    def branch = gitBranch()
    def track = 'internal'
    if (branch == "develop") {
        track = "beta"
    }
    println("DEPLOYMENT TRACK: " + track)
    return track
}

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    println("BRANCH: " + branch)
    branch
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.gms:play-services-maps:$rootProject.googleMaps"
    implementation 'com.android.support:appcompat-v7:28.0.0'

    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.expressoVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.expressoVersion"

    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.mockito:mockito-inline:2.23.0'

    // Set this dependency to use JUnit 4 rules
    androidTestImplementation("com.android.support.test:rules:$rootProject.testRulesVersion") {
        exclude module: 'support-annotations'
    }



    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "nl.psdcompany:duo-navigation-drawer:$drawer"

    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    //    Retrofit Responses
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okttpV"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.okttpUrlConnection"
    implementation "com.squareup.okhttp3:mockwebserver:$rootProject.okttpMockWebServer"

    // Dependency Injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2"

    implementation "com.google.android.gms:play-services-location:$rootProject.googleService"
    kapt "com.jakewharton:butterknife:$rootProject.butterKnife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnife"

    // RxJava 2
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid"

    implementation "android.arch.lifecycle:extensions:$rootProject.lifeCycleExt"

    implementation('com.squareup.picasso:picasso:2.71828') {
        exclude group: 'com.android.support'
        exclude module: ['exifinterface', 'support-annotations']
    }

    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    implementation 'com.github.AravindVijay7:GeoLocator-Android:1.0.2'
    implementation ('com.github.ankitdubey021:GPSTracker:2.0') {
        exclude  group:'com.google.android.gms'
    }

    implementation "pub.devrel:easypermissions:$rootProject.easyPermission"
}
repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
